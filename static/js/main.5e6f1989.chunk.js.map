{"version":3,"sources":["pages/HomePage.jsx","pages/NotFound.jsx","routes.js","pages/AboutUsPage.jsx","pages/Articles.jsx","components/navbar.jsx","components/sidebar.jsx","components/footer.jsx","components/DefaultLayout.jsx","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","Fragment","className","NotFound","routes","exact","path","component","withRouter","Navbar","collapseOnSelect","expand","bg","variant","NavbarBrand","href","Toggle","aria-controls","Collapse","id","Nav","to","activeClassName","Sidebar","Footer","Template","children","class","style","App","basename","DefaultLayout","map","route","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2QAUeA,MARf,SAAkBC,GAChB,OACE,kBAAC,IAAMC,SAAP,KACA,wBAAIC,UAAU,+BAAd,UCOWC,ICmBAC,EAzBA,CACb,CACEC,OAAO,EACPC,KAAM,IACNC,UAAWR,GAEb,CACEO,KAAK,mBACLC,UAAWR,GAEb,CACEO,KAAM,YACNC,UChBJ,SAAiBP,GACf,OACE,kBAAC,IAAMC,SAAP,KACA,wBAAIC,UAAU,+BAAd,gBDgBF,CACEI,KAAM,YACNC,UErBJ,SAAkBP,GAChB,OACE,kBAAC,IAAMC,SAAP,KACA,wBAAIC,UAAU,+BAAd,eFoBF,CACEI,KAAK,IACLC,UD1BJ,SAAkBP,GAChB,OACE,kBAAC,IAAMC,SAAP,KACA,wBAAIC,UAAU,+BAAd,MAEE,6BAFF,4B,gCImBWM,mBAlBf,SAAgBR,GACd,OAEE,kBAACS,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACvD,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,mBACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKlB,UAAU,WACb,kBAAC,IAAD,CAASG,OAAK,EAACgB,GAAG,IAAInB,UAAU,WAAWoB,gBAAgB,UAA3D,QACA,kBAAC,IAAD,CAASjB,OAAK,EAACgB,GAAG,YAAYnB,UAAU,WAAWoB,gBAAgB,UAAnE,YACA,kBAAC,IAAD,CAASjB,OAAK,EAACgB,GAAG,YAAYnB,UAAU,WAAWoB,gBAAgB,UAAnE,kBCLOC,EARC,WACZ,OACI,kBAAC,IAAMtB,SAAP,KACK,yCCKEuB,EARA,WACX,OACI,kBAAC,IAAMvB,SAAP,KACK,wCCqBEwB,MApBf,YAAiC,IAAbC,EAAY,EAAZA,SAChB,OACC,yBAAKC,MAAM,cACX,kBAAC,EAAD,MACA,yBAAKA,MAAM,OACL,yBAAKA,MAAM,aAAaC,MAAM,qBAC7BF,GAED,yBAAKC,MAAM,eACX,kBAAC,EAAD,QAGP,yBAAKA,MAAM,UACR,kBAAC,EAAD,SCIQE,MAdf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,oBACpB,kBAACC,EAAD,KACA,kBAAC,IAAD,KACA3B,EAAO4B,KAAI,SAACC,GAAD,OACV,kBAAC,IAAUA,UCHGC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SD6H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5e6f1989.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction HomePage(props) {\n  return (\n    <React.Fragment>\n    <h2 className=\"text-center w-100 pt-5 mt-5\">Home</h2>\n    </React.Fragment>\n  )\n}\n\nexport default HomePage","import React from \"react\"\nfunction NotFound(props) {\n  return (\n    <React.Fragment>\n    <h2 className=\"text-center w-100 pt-5 mt-5\">\n      404\n      <br />\n     this page not found.\n    </h2>\n    </React.Fragment>\n  )\n}\nexport default NotFound","import HomePage from \"./pages/HomePage\"\nimport AboutUs from \"./pages/AboutUsPage\"\nimport Articles from \"./pages/Articles\"\nimport NotFound from \"./pages/NotFound\"\n\n\nconst routes = [\n  {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n  },\n  {\n    path:\"/new-react-panel\",\n    component: HomePage,\n  },\n  {\n    path: \"/about-us\",\n    component: AboutUs,\n  },\n  \n  {\n    path: \"/articles\",\n    component: Articles,\n  },\n  {\n    path:\"*\",\n    component: NotFound,\n  },\n]\n\nexport default routes;\n","import React from \"react\"\n\nfunction AboutUs(props) {\n  return (\n    <React.Fragment>\n    <h2 className=\"text-center w-100 pt-5 mt-5\">about us </h2>    \n    </React.Fragment>\n  )\n}\n\nexport default AboutUs","import React from \"react\"\n\nfunction Articles(props) {\n  return (\n    <React.Fragment>\n    <h2 className=\"text-center w-100 pt-5 mt-5\">Articles</h2>\n    </React.Fragment>\n  )\n}\n\nexport default Articles","import React from 'react';\nimport \"./componentStyles.css\"\nimport {Navbar,NavbarBrand,Nav} from 'react-bootstrap';\nimport {NavLink , withRouter} from \"react-router-dom\";\n\nfunction navbar(props) {\n  return (\n\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n    <NavbarBrand href=\"/\" >New React Panel</NavbarBrand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <NavLink exact to=\"/\" className=\"nav-link\" activeClassName=\"active\">Home</NavLink>\n        <NavLink exact to=\"/articles\" className=\"nav-link\" activeClassName=\"active\">Articles</NavLink>\n        <NavLink exact to=\"/about-us\" className=\"nav-link\" activeClassName=\"active\">About Us</NavLink>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n \n  );\n}\n\nexport default withRouter(navbar) ;\n","import React from \"react\"\n\nconst Sidebar = () => {\n    return(\n        <React.Fragment>\n             <h3>Sidebar</h3>\n        </React.Fragment>\n           \n    )\n}\nexport default Sidebar","import React from \"react\"\n\nconst Footer = () => {\n    return(\n        <React.Fragment>\n             <h3>Footer</h3>\n        </React.Fragment>\n           \n    )\n}\nexport default Footer","import React from \"react\"\nimport \"./componentStyles.css\"\nimport NavBar from'./navbar';\nimport SideBar from './sidebar';\nimport Footer from './footer';\n\nfunction Template({ children }) {\n    return ( \n     <div class=\"container \">\n     <NavBar/> \n     <div class=\"row\">\n           <div class=\"leftcolumn\" style=\"text-align:center\">\n           {children} \n           </div>   \n           <div class=\"rightcolumn\">\n           <SideBar/>\n           </div>\n        </div>\n    <div class=\"footer\">\n       <Footer/>\n    </div>\n  </div>\n    \n  )\n}\n\nexport default Template;\n","import React from \"react\";\nimport {HashRouter ,  Route , Switch } from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport routes from './routes';\nimport DefaultLayout from './components/DefaultLayout';\n\n\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/new-react-panel\">\n     <DefaultLayout>\n     <Switch>\n    {routes.map((route) => (\n      <Route {...route} />\n    ))}\n     </Switch>\n    </DefaultLayout>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}