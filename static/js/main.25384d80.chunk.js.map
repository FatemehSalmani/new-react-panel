{"version":3,"sources":["pages/NotFound.jsx","routes.js","pages/HomePage.jsx","pages/AboutUsPage.jsx","pages/Articles.jsx","components/navbar.jsx","components/sidebar.jsx","components/Template.jsx","App.js","serviceWorker.js","index.js"],"names":["NotFound","routes","exact","path","component","props","className","class","id","withRouter","location","Navbar","color","light","expand","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","to","activeClassName","Sidebar","Template","children","App","map","route","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oQAqBeA,ICKAC,EApBA,CACb,CACEC,OAAO,EACPC,KAAM,IACNC,UCRJ,SAAkBC,GAChB,OACE,oCAEA,yBAAKC,UAAU,aACf,yBAAKC,MAAM,OACX,yBAAKC,GAAG,UAAWD,MAAM,gDACzB,yBAAKC,GAAG,WACR,uBAAGF,UAAU,+BAAb,4BDEF,CACEH,KAAM,YACNC,UEZJ,SAAiBC,GACf,OACE,oCACA,yBAAKC,UAAU,aACf,yBAAKC,MAAM,OACX,yBAAKC,GAAG,UAAWD,MAAM,gDACzB,yBAAKC,GAAG,WACR,uBAAGF,UAAU,+BAAb,gCFQF,CACEH,KAAM,YACNC,UGjBJ,SAAkBC,GAChB,OACE,oCACA,yBAAKC,UAAU,aACf,yBAAKC,MAAM,OACX,yBAAKC,GAAG,UAAWD,MAAM,gDACzB,yBAAKC,GAAG,WACR,uBAAGF,UAAU,+BAAb,+BHYF,CACEF,UDpBJ,SAAkBC,GAChB,OACE,yBAAKC,UAAU,aACf,yBAAKC,MAAM,OACX,yBAAKC,GAAG,UAAWD,MAAM,gDACzB,yBAAKC,GAAG,WACR,uBAAGF,UAAU,+BAAb,MAEE,6BAFF,+B,wCKyCWG,mBAtCf,SAAgBC,GACd,OACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,MAChC,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,mBACA,kBAACC,EAAA,EAAD,CAAUC,QAAQ,EAAMC,QAAM,GAC7B,kBAACC,EAAA,EAAD,CAAKd,UAAU,UAAUa,QAAM,GAChC,kBAACE,EAAA,EAAD,KACK,kBAAC,IAAD,CAASnB,OAAK,EAACoB,GAAG,IAAIhB,UAAU,WAAWiB,gBAAgB,UAA3D,SAIF,kBAACF,EAAA,EAAD,KACE,kBAAC,IAAD,CACEnB,OAAK,EACLoB,GAAG,YACHhB,UAAU,WACViB,gBAAgB,UAJlB,aASF,kBAACF,EAAA,EAAD,KACE,kBAAC,IAAD,CACEnB,OAAK,EACLoB,GAAG,YACHhB,UAAU,WACViB,gBAAgB,UAJlB,mBCjBGC,G,MAdC,WACZ,OACI,yBAAKjB,MAAM,YACX,yBAAKC,GAAG,UAAUF,UAAU,+BAC5B,yBAAKC,MAAM,kBACP,4CCOGkB,MAXf,YAAiC,IAAbC,EAAY,EAAZA,SAChB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACCA,I,MCiBMC,MAlBf,WACE,OAEE,kBAAC,IAAD,KAEC,kBAAC,EAAD,KACA,kBAAC,IAAD,KACA1B,EAAO2B,KAAI,SAACC,GAAD,OACV,kBAAC,IAAUA,UCHGC,QACW,cAA7BC,OAAOrB,SAASsB,UAEe,UAA7BD,OAAOrB,SAASsB,UAEhBD,OAAOrB,SAASsB,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.25384d80.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction NotFound(props) {\n  return (\n    <div className=\"container\">\n    <div class=\"row\">\n    <div id=\"content\"  class=\" m-lg-2 col-lg-8 col-md-9 col-sm-6 col-xs-12\">\n    <div id=\"content\" >\n    <p className=\"text-center w-100 pt-5 mt-5\">\n      404\n      <br />\n     this page not found.\n    </p>\n    </div>\n    </div>\n    </div>\n    </div>\n   \n  )\n}\n\nexport default NotFound","import HomePage from \"./pages/HomePage\"\nimport AboutUs from \"./pages/AboutUsPage\"\nimport Articles from \"./pages/Articles\"\nimport NotFound from \"./pages/NotFound\"\n\n\nconst routes = [\n  {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n  },\n  {\n    path: \"/about-us\",\n    component: AboutUs,\n  },\n  \n  {\n    path: \"/articles\",\n    component: Articles,\n  },\n  {\n    component: NotFound,\n  },\n]\n\nexport default routes;\n","import React from \"react\"\n\nfunction HomePage(props) {\n  return (\n    <>\n   \n    <div className=\"container\">\n    <div class=\"row\">\n    <div id=\"content\"  class=\" m-lg-2 col-lg-8 col-md-9 col-sm-6 col-xs-12\">\n    <div id=\"content\" >\n    <p className=\"text-center w-100 pt-5 mt-5\">here is home page</p>\n    </div>\n    </div>\n    </div>\n    </div>\n    </>\n  )\n}\n\nexport default HomePage","import React from \"react\"\n\nfunction AboutUs(props) {\n  return (\n    <>\n    <div className=\"container\">\n    <div class=\"row\">\n    <div id=\"content\"  class=\" m-lg-2 col-lg-8 col-md-9 col-sm-6 col-xs-12\">\n    <div id=\"content\" >\n    <p className=\"text-center w-100 pt-5 mt-5\">here is about us page</p>\n    </div>\n    </div>\n    </div>\n    </div>\n     \n    \n    </>\n  )\n}\n\nexport default AboutUs","import React from \"react\"\n\nfunction Articles(props) {\n  return (\n    <>\n    <div className=\"container\">\n    <div class=\"row\">\n    <div id=\"content\"  class=\" m-lg-2 col-lg-8 col-md-9 col-sm-6 col-xs-12\">\n    <div id=\"content\" >\n    <p className=\"text-center w-100 pt-5 mt-5\">her is Articles page</p>\n    </div>\n    </div>\n    </div>\n    </div>\n     \n    </>\n  )\n}\n\nexport default Articles","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n} from \"reactstrap\"\nimport {NavLink , withRouter} from \"react-router-dom\";\n\n\nfunction navbar(location) {\n  return (\n    <Navbar color=\"light\" light expand=\"md\">\n       <NavbarBrand href=\"/\">new react panel</NavbarBrand>\n       <Collapse isOpen={true} navbar>\n        <Nav className=\"ml-auto\" navbar>\n       <NavItem>\n            <NavLink exact to=\"/\" className=\"nav-link\" activeClassName=\"active\">\n              Home\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              exact\n              to=\"/articles\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n            >\n              Articles\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              exact\n              to=\"/about-us\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n            >\n            About Us\n            </NavLink>\n          </NavItem>\n          </Nav>\n          </Collapse>\n      </Navbar>\n    \n  );\n}\n\nexport default withRouter(navbar) ;\n","import React from \"react\"\nimport \"./componentStyles.css\"\nconst Sidebar = () => {\n    return(\n        <div class=\"wrapper \">\n        <nav id=\"sidebar\" className=\"p-3 mb-2 bg-info text-white\" >\n        <div class=\"sidebar-header\">\n            <h3>Sidebar</h3>\n        </div>\n\n      \n    </nav>\n    </div>\n    )\n}\n\nexport default Sidebar","import React from \"react\"\nimport NavBar from'./navbar';\nimport SideBar from './sidebar';\nfunction Template({ children }) {\n    return (\n      <>\n        <NavBar/>\n        <SideBar/>\n        {children}\n        \n    </>\n  )\n}\n\nexport default Template;","import React from \"react\";\nimport { BrowserRouter , Route , Switch } from \"react-router-dom\"\nimport routes from './routes';\nimport Template from './components/Template';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction App() {\n  return (\n    \n    <BrowserRouter>\n    \n     <Template>\n     <Switch>\n    {routes.map((route) => (\n      <Route {...route} />\n    ))}\n     </Switch>\n    </Template>\n     \n   \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}